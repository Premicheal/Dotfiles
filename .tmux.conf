# Plugin and theme setup
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-sensible '
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'vascomfnunes/tmux-clima'
set -g @plugin 'jamesoff/tmux-loadavg'
set -g @plugin 'xamut/tmux-weather'
# Catppuccin theme settings
# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator ""
# set -g @catppuccin_window_number_position "left"
# set -g @catppuccin_window_middle_separator ""
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_current_fill "number"
if-shell "uname | grep -q Darwin" {
    set -g @catppuccin_status_right_separator " "
}
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_status_modules_right "gitmux cpu"
set -g @catppuccin_status_modules_left ""
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"
set -g @catppuccin_status_left_separator "â–ˆ"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_text "#W"
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "none"
set -g @catppuccin_status_connect_separator "yes"
set -g @tmux_window_name_use_tilde "True"
set -g @tmux_window_name_max_name_len "44"
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

# SessionX settings
set -g @sessionx-bind 'o'
set -g @sessionx-bind-kill-session 'ctrl-x'
set -g @sessionx-bind-configuration-path 'ctrl-c'
# General settings
set -g mouse on

set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set -g history-limit 1000000
set -g status on
set -g status-right-length 100
set -g status-right '#(tmux list-sessions -F "#{session_name}" | tr "\n" " ")'
set -g detach-on-destroy off
set -sg escape-time 0
set -g focus-events on
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g set-clipboard on         # use system clipboard
set -g detach-on-destroy off    # don't exit from tmux when closing a session
set -g history-limit 1000000    # increase history size (from 2,000)
set -g status-interval 3        # update the status bar every 3 seconds
set -g allow-passthrough on 
set -g @resurrect-capture-pane-contents 'on'
# Prefix and key bindings
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix
bind c new-window -c "#{pane_current_path}"
bind C-c new-session -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
bind '"' switch-client -n
bind "'" switch-client -p
unbind '%'
bind % switch-client -n
bind r source-file ~/.tmux.conf
bind -r ^ last-window
bind p previous-window
bind n next-window
bind f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"
bind C-f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# Vim-like pane navigation
is_vim="children=(); i=0; pids=( $(ps -o pid= -t '#{pane_tty}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"
bind "h" if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind "j" if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind "k" if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind "l" if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind "s" if-shell "$is_vim" 'send-keys C-w s' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind "v" if-shell "$is_vim" 'send-keys C-w v' { if -F '#{pane_at_right}' '' 'select-pane -R' }

# Shell window navigation
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n 'C-\' if-shell "[ $(tmux display-message -p '#W') = 'snail' ]" { 'last-window' } { if-shell "[ $(tmux list-windows | grep -c 'snail') -eq 0 ]" 'new-window -n snail' 'select-window -t snail' }
bind-key -n '^]' if-shell "[ $(tmux display-message -p '#W') = 'lazygitt' ]" { 'last-window' } { if-shell "[ $(tmux list-windows | grep -c 'lazygitt') -eq 0 ]" "new-window -n lazygitt lazygit" "select-window -t lazygitt" }
bind-key -n '^_' switch-client -l
bind -n End send-key C-e
bind -n Home send-key C-a

# Copy mode key bindings
bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5
setw -g mode-keys vi
# Plugin manager
run '~/.tmux/plugins/tpm/tpm'
